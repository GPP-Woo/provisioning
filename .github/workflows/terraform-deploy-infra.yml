
name: Deploy Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - "infra/**.tf"
  pull_request:
    branches:
      - main
    paths:
      - "infra/**.tf"
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform-Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # Required for OIDC

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true
      tf_resource_group_name: "woo-provisioning"
      tf_storage_account_name: "wooprovisioning"
      tf_state_container: "github-oidc-terraform-tfstate"
      tf_state_key: "terraform.tfstate"
      working_directory: infra/environments/prod

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2
        terraform_wrapper: true

    - name: Terraform Format
      if: github.event_name == 'pull_request'
      run: terraform fmt
      working-directory: ${{ env.working_directory }}
    - name: Auto Commit Changes
      uses: stefanzweifel/git-auto-commit-action@v5
      if: github.event_name == 'pull_request'
      with:
        commit_message: "Terraform fmt"
        file_pattern: "*.tf *.tfvars"
        commit_user_name: "github-actions[bot]"

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.working_directory }}

    # Beware: validate WILL break on use of known-after-apply resources for dict keys
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color -input=false
      working-directory: ${{ env.working_directory }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: terraform apply -auto-approve -input=false
      working-directory: ${{ env.working_directory }}
